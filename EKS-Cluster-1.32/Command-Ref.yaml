vi kms-key-for-encryption-on-ebs.json

{
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Action": [
            "kms:CreateGrant",
            "kms:ListGrants",
            "kms:RevokeGrant"
          ],
          "Resource": ["custom-key-arn"],
          "Condition": {
            "Bool": {
              "kms:GrantIsForAWSResource": "true"
            }
          }
        },
        {
          "Effect": "Allow",
          "Action": [
            "kms:Encrypt",
            "kms:Decrypt",
            "kms:ReEncrypt*",
            "kms:GenerateDataKey*",
            "kms:DescribeKey"
          ],
          "Resource": ["custom-key-arn"]
        }
      ]
    }

aws iam create-policy \
      --policy-name KMS_Key_For_Encryption_On_EBS_Policy \
      --policy-document file://kms-key-for-encryption-on-ebs.json


using this policy create service account >


eksctl create iamserviceaccount \
  --name ebs-csi-controller-sa \
  --namespace kube-system \
  --cluster VotingAPP-Prod-Private
  --region us-east-1
  --attach-policy-arn arn:aws:iam::730335280129:policy/KMS_Key_For_Encryption_On_EBS_Policy
  --approve \
  --role-only=false

using addon install ebs csi driver -

eksctl create addon \
  --name aws-efs-csi-driver \
  --cluster <your-cluster-name> \
  --region <your-region> \
  --service-account-role-arn arn:aws:iam::<account-id>:role/<role-name> \
  --force


To check the status -

kubectl get pods -n kube-system -l "app.kubernetes.io/name=aws-ebs-csi-driver"


----------------------------------------------------------------------------------------------------------------------------------------------------


EFS SA creation -

export cluster_name=VotingAPP-Prod-Private
export role_name=AmazonEKS_EFS_CSI_DriverRole

eksctl create iamserviceaccount \
  --name efs-csi-controller-sa \
  --namespace kube-system \
  --cluster $cluster_name \
  --role-name $role_name \
  --region us-east-1 \
  --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEFSCSIDriverPolicy \
  --approve


efs add on implement -

aws eks create-addon \
  --cluster-name VotingAPP-Prod-Private \
  --addon-name aws-efs-csi-driver \
  --service-account-role-arn arn:aws:iam::730335280129:role/AmazonEKS_EFS_CSI_DriverRole \
  --region us-east-1

To check the status -

kubectl get pods -n kube-system -l app.kubernetes.io/name=aws-efs-csi-driver





-----------------------------------------------------------------------------------------------------------------------------------------------
Load Balancer Controller creation

curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.13.0/docs/install/iam_policy.json

aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json

    
eksctl create iamserviceaccount \
    --cluster=VotingAPP-Prod-Private \
    --namespace=kube-system \
    --name=aws-load-balancer-controller \
    --attach-policy-arn=arn:aws:iam::730335280129:policy/AWSLoadBalancerControllerIAMPolicy \
    --override-existing-serviceaccounts \
    --region us-east-1 \
    --approve
